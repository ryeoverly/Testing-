class Stack:
    def __init__(self):
        self.items = []

    def push(self, item):
        """Add an item to the top of the stack."""
        self.items.append(item)

    def pop(self):
        """Remove and return the item from the top of the stack. 
        Raises an IndexError if the stack is empty."""
        if not self.is_empty():
            return self.items.pop()
        else:
            raise IndexError("Pop from an empty stack")

    def peek(self):
        """Return the item at the top of the stack without removing it.
        Raises an IndexError if the stack is empty."""
        if not self.is_empty():
            return self.items[-1]
        else:
            raise IndexError("Peek from an empty stack")

    def is_empty(self):
        """Return True if the stack is empty, False otherwise."""
        return len(self.items) == 0

    def size(self):
        """Return the number of items in the stack."""
        return len(self.items)

# Example usage
if __name__ == "__main__":
    s = Stack()
    s.push(10)
    s.push(20)
    print(s.pop())    # Output: 20
    print(s.peek())   # Output: 10
    print(s.size())   # Output: 1
